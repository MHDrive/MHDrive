name: Generate Snake

on:
  schedule:
      # run at 18.00 everyday
    - cron: "0 18 * * *"

# allows us to run the Action manually at any time
  workflow_dispatch:

# The sequence of runs in this workflow:
jobs:
  generate:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      # generates a snake game from a github user (<github_user_name>) contributions graph, output a svg animation at <svg_out_path>
      - name: generate github-contribution-grid-snake.svg
        uses: Platane/snk/svg-only@v3
        with:
          github_user_name: ${{ github.repository_owner }}
          outputs: |
            dist/github-contribution-grid-snake.svg
            dist/github-contribution-grid-snake-dark.svg?palette=github-dark
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  # This workflow contains a single job called "build"
  # build:
  #   # The type of runner that the job will run on
  #   runs-on: ubuntu-latest

  #   # Steps represent a sequence of tasks that will be executed as part of the job
    # steps:

    # Checks repo under $GITHUB_WORKSHOP, so your job can access it
    #   - uses: actions/checkout@v2

    # # Generates the snake  
    #   - uses: Platane/snk@master
    #     id: snake-gif
    #     with:
    #       github_user_name: MHDrive
          # these next 2 lines generate the files on a branch called "output". This keeps the main branch from cluttering up.
          # gif_out_path: dist/github-contribution-grid-snake.gif
          # svg_out_path: dist/github-contribution-grid-snake.svg

     # show the status of the build. Makes it easier for debugging (if there's any issues).
      # - run: git status

      # Push the changes
      # - name: Push changes
      #   uses: ad-m/github-push-action@master
      #   with:
      #     github_token: ${{ secrets.GITHUB_TOKEN }}
      #     branch: master
      #     force: true
      - name: push github-contribution-grid-snake.svg to the output branch
        uses: crazy-max/ghaction-github-pages@v3.1.0
        with:
          # the output branch we mentioned above
          target_branch: output
          build_dir: dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}